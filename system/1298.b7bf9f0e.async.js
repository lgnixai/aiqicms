!(function(){"use strict";var nt=Object.defineProperty,ct=Object.defineProperties;var ot=Object.getOwnPropertyDescriptors;var Me=Object.getOwnPropertySymbols;var lt=Object.prototype.hasOwnProperty,ht=Object.prototype.propertyIsEnumerable;var Re=(z,H,I)=>H in z?nt(z,H,{enumerable:!0,configurable:!0,writable:!0,value:I}):z[H]=I,Le=(z,H)=>{for(var I in H||(H={}))lt.call(H,I)&&Re(z,I,H[I]);if(Me)for(var I of Me(H))ht.call(H,I)&&Re(z,I,H[I]);return z},ve=(z,H)=>ct(z,ot(H));(self.webpackChunkAnQiCMS=self.webpackChunkAnQiCMS||[]).push([[1298],{71298:function(z,H,I){I.d(H,{diagram:function(){return tt}});var b=I(82725),Ce=I(15525),mt=I(16483),ut=I(91088),ft=I(90795),oe=function(){var r=function(S,o,u,x){for(u=u||{},x=S.length;x--;u[S[x]]=o);return u},n=[1,3],l=[1,6],h=[1,4],i=[1,5],c=[2,5],g=[1,12],m=[5,7,13,19,21,23,24,26,28,31,37,40,47],y=[7,13,19,21,23,24,26,28,31,37,40],_=[7,12,13,19,21,23,24,26,28,31,37,40],a=[7,13,47],P=[1,42],E=[1,41],d=[7,13,29,32,35,38,47],f=[1,55],k=[1,56],p=[1,57],T=[7,13,32,35,42,47],j={trace:function(){},yy:{},symbols_:{error:2,start:3,eol:4,GG:5,document:6,EOF:7,":":8,DIR:9,options:10,body:11,OPT:12,NL:13,line:14,statement:15,commitStatement:16,mergeStatement:17,cherryPickStatement:18,acc_title:19,acc_title_value:20,acc_descr:21,acc_descr_value:22,acc_descr_multiline_value:23,section:24,branchStatement:25,CHECKOUT:26,ref:27,BRANCH:28,ORDER:29,NUM:30,CHERRY_PICK:31,COMMIT_ID:32,STR:33,PARENT_COMMIT:34,COMMIT_TAG:35,EMPTYSTR:36,MERGE:37,COMMIT_TYPE:38,commitType:39,COMMIT:40,commit_arg:41,COMMIT_MSG:42,NORMAL:43,REVERSE:44,HIGHLIGHT:45,ID:46,";":47,$accept:0,$end:1},terminals_:{2:"error",5:"GG",7:"EOF",8:":",9:"DIR",12:"OPT",13:"NL",19:"acc_title",20:"acc_title_value",21:"acc_descr",22:"acc_descr_value",23:"acc_descr_multiline_value",24:"section",26:"CHECKOUT",28:"BRANCH",29:"ORDER",30:"NUM",31:"CHERRY_PICK",32:"COMMIT_ID",33:"STR",34:"PARENT_COMMIT",35:"COMMIT_TAG",36:"EMPTYSTR",37:"MERGE",38:"COMMIT_TYPE",40:"COMMIT",42:"COMMIT_MSG",43:"NORMAL",44:"REVERSE",45:"HIGHLIGHT",46:"ID",47:";"},productions_:[0,[3,2],[3,3],[3,4],[3,5],[6,0],[6,2],[10,2],[10,1],[11,0],[11,2],[14,2],[14,1],[15,1],[15,1],[15,1],[15,2],[15,2],[15,1],[15,1],[15,1],[15,2],[25,2],[25,4],[18,3],[18,5],[18,5],[18,7],[18,7],[18,5],[18,5],[18,5],[18,7],[18,7],[18,7],[18,7],[17,2],[17,4],[17,4],[17,4],[17,6],[17,6],[17,6],[17,6],[17,6],[17,6],[17,8],[17,8],[17,8],[17,8],[17,8],[17,8],[16,2],[16,3],[16,3],[16,5],[16,5],[16,3],[16,5],[16,5],[16,5],[16,5],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,3],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[41,0],[41,1],[39,1],[39,1],[39,1],[27,1],[27,1],[4,1],[4,1],[4,1]],performAction:function(o,u,x,s,w,e,re){var t=e.length-1;switch(w){case 2:return e[t];case 3:return e[t-1];case 4:return s.setDirection(e[t-3]),e[t-1];case 6:s.setOptions(e[t-1]),this.$=e[t];break;case 7:e[t-1]+=e[t],this.$=e[t-1];break;case 9:this.$=[];break;case 10:e[t-1].push(e[t]),this.$=e[t-1];break;case 11:this.$=e[t-1];break;case 16:this.$=e[t].trim(),s.setAccTitle(this.$);break;case 17:case 18:this.$=e[t].trim(),s.setAccDescription(this.$);break;case 19:s.addSection(e[t].substr(8)),this.$=e[t].substr(8);break;case 21:s.checkout(e[t]);break;case 22:s.branch(e[t]);break;case 23:s.branch(e[t-2],e[t]);break;case 24:s.cherryPick(e[t],"",void 0);break;case 25:s.cherryPick(e[t-2],"",void 0,e[t]);break;case 26:s.cherryPick(e[t-2],"",e[t]);break;case 27:s.cherryPick(e[t-4],"",e[t],e[t-2]);break;case 28:s.cherryPick(e[t-4],"",e[t-2],e[t]);break;case 29:s.cherryPick(e[t],"",e[t-2]);break;case 30:s.cherryPick(e[t],"","");break;case 31:s.cherryPick(e[t-2],"","");break;case 32:s.cherryPick(e[t-4],"","",e[t-2]);break;case 33:s.cherryPick(e[t-4],"","",e[t]);break;case 34:s.cherryPick(e[t-2],"",e[t-4],e[t]);break;case 35:s.cherryPick(e[t-2],"","",e[t]);break;case 36:s.merge(e[t],"","","");break;case 37:s.merge(e[t-2],e[t],"","");break;case 38:s.merge(e[t-2],"",e[t],"");break;case 39:s.merge(e[t-2],"","",e[t]);break;case 40:s.merge(e[t-4],e[t],"",e[t-2]);break;case 41:s.merge(e[t-4],"",e[t],e[t-2]);break;case 42:s.merge(e[t-4],"",e[t-2],e[t]);break;case 43:s.merge(e[t-4],e[t-2],e[t],"");break;case 44:s.merge(e[t-4],e[t-2],"",e[t]);break;case 45:s.merge(e[t-4],e[t],e[t-2],"");break;case 46:s.merge(e[t-6],e[t-4],e[t-2],e[t]);break;case 47:s.merge(e[t-6],e[t],e[t-4],e[t-2]);break;case 48:s.merge(e[t-6],e[t-4],e[t],e[t-2]);break;case 49:s.merge(e[t-6],e[t-2],e[t-4],e[t]);break;case 50:s.merge(e[t-6],e[t],e[t-2],e[t-4]);break;case 51:s.merge(e[t-6],e[t-2],e[t],e[t-4]);break;case 52:s.commit(e[t]);break;case 53:s.commit("","",s.commitType.NORMAL,e[t]);break;case 54:s.commit("","",e[t],"");break;case 55:s.commit("","",e[t],e[t-2]);break;case 56:s.commit("","",e[t-2],e[t]);break;case 57:s.commit("",e[t],s.commitType.NORMAL,"");break;case 58:s.commit("",e[t-2],s.commitType.NORMAL,e[t]);break;case 59:s.commit("",e[t],s.commitType.NORMAL,e[t-2]);break;case 60:s.commit("",e[t-2],e[t],"");break;case 61:s.commit("",e[t],e[t-2],"");break;case 62:s.commit("",e[t-4],e[t-2],e[t]);break;case 63:s.commit("",e[t-4],e[t],e[t-2]);break;case 64:s.commit("",e[t-2],e[t-4],e[t]);break;case 65:s.commit("",e[t],e[t-4],e[t-2]);break;case 66:s.commit("",e[t],e[t-2],e[t-4]);break;case 67:s.commit("",e[t-2],e[t],e[t-4]);break;case 68:s.commit(e[t],"",s.commitType.NORMAL,"");break;case 69:s.commit(e[t],"",s.commitType.NORMAL,e[t-2]);break;case 70:s.commit(e[t-2],"",s.commitType.NORMAL,e[t]);break;case 71:s.commit(e[t-2],"",e[t],"");break;case 72:s.commit(e[t],"",e[t-2],"");break;case 73:s.commit(e[t],e[t-2],s.commitType.NORMAL,"");break;case 74:s.commit(e[t-2],e[t],s.commitType.NORMAL,"");break;case 75:s.commit(e[t-4],"",e[t-2],e[t]);break;case 76:s.commit(e[t-4],"",e[t],e[t-2]);break;case 77:s.commit(e[t-2],"",e[t-4],e[t]);break;case 78:s.commit(e[t],"",e[t-4],e[t-2]);break;case 79:s.commit(e[t],"",e[t-2],e[t-4]);break;case 80:s.commit(e[t-2],"",e[t],e[t-4]);break;case 81:s.commit(e[t-4],e[t],e[t-2],"");break;case 82:s.commit(e[t-4],e[t-2],e[t],"");break;case 83:s.commit(e[t-2],e[t],e[t-4],"");break;case 84:s.commit(e[t],e[t-2],e[t-4],"");break;case 85:s.commit(e[t],e[t-4],e[t-2],"");break;case 86:s.commit(e[t-2],e[t-4],e[t],"");break;case 87:s.commit(e[t-4],e[t],s.commitType.NORMAL,e[t-2]);break;case 88:s.commit(e[t-4],e[t-2],s.commitType.NORMAL,e[t]);break;case 89:s.commit(e[t-2],e[t],s.commitType.NORMAL,e[t-4]);break;case 90:s.commit(e[t],e[t-2],s.commitType.NORMAL,e[t-4]);break;case 91:s.commit(e[t],e[t-4],s.commitType.NORMAL,e[t-2]);break;case 92:s.commit(e[t-2],e[t-4],s.commitType.NORMAL,e[t]);break;case 93:s.commit(e[t-6],e[t-4],e[t-2],e[t]);break;case 94:s.commit(e[t-6],e[t-4],e[t],e[t-2]);break;case 95:s.commit(e[t-6],e[t-2],e[t-4],e[t]);break;case 96:s.commit(e[t-6],e[t],e[t-4],e[t-2]);break;case 97:s.commit(e[t-6],e[t-2],e[t],e[t-4]);break;case 98:s.commit(e[t-6],e[t],e[t-2],e[t-4]);break;case 99:s.commit(e[t-4],e[t-6],e[t-2],e[t]);break;case 100:s.commit(e[t-4],e[t-6],e[t],e[t-2]);break;case 101:s.commit(e[t-2],e[t-6],e[t-4],e[t]);break;case 102:s.commit(e[t],e[t-6],e[t-4],e[t-2]);break;case 103:s.commit(e[t-2],e[t-6],e[t],e[t-4]);break;case 104:s.commit(e[t],e[t-6],e[t-2],e[t-4]);break;case 105:s.commit(e[t],e[t-4],e[t-2],e[t-6]);break;case 106:s.commit(e[t-2],e[t-4],e[t],e[t-6]);break;case 107:s.commit(e[t],e[t-2],e[t-4],e[t-6]);break;case 108:s.commit(e[t-2],e[t],e[t-4],e[t-6]);break;case 109:s.commit(e[t-4],e[t-2],e[t],e[t-6]);break;case 110:s.commit(e[t-4],e[t],e[t-2],e[t-6]);break;case 111:s.commit(e[t-2],e[t-4],e[t-6],e[t]);break;case 112:s.commit(e[t],e[t-4],e[t-6],e[t-2]);break;case 113:s.commit(e[t-2],e[t],e[t-6],e[t-4]);break;case 114:s.commit(e[t],e[t-2],e[t-6],e[t-4]);break;case 115:s.commit(e[t-4],e[t-2],e[t-6],e[t]);break;case 116:s.commit(e[t-4],e[t],e[t-6],e[t-2]);break;case 117:this.$="";break;case 118:this.$=e[t];break;case 119:this.$=s.commitType.NORMAL;break;case 120:this.$=s.commitType.REVERSE;break;case 121:this.$=s.commitType.HIGHLIGHT;break}},table:[{3:1,4:2,5:n,7:l,13:h,47:i},{1:[3]},{3:7,4:2,5:n,7:l,13:h,47:i},{6:8,7:c,8:[1,9],9:[1,10],10:11,13:g},r(m,[2,124]),r(m,[2,125]),r(m,[2,126]),{1:[2,1]},{7:[1,13]},{6:14,7:c,10:11,13:g},{8:[1,15]},r(y,[2,9],{11:16,12:[1,17]}),r(_,[2,8]),{1:[2,2]},{7:[1,18]},{6:19,7:c,10:11,13:g},{7:[2,6],13:[1,22],14:20,15:21,16:23,17:24,18:25,19:[1,26],21:[1,27],23:[1,28],24:[1,29],25:30,26:[1,31],28:[1,35],31:[1,34],37:[1,33],40:[1,32]},r(_,[2,7]),{1:[2,3]},{7:[1,36]},r(y,[2,10]),{4:37,7:l,13:h,47:i},r(y,[2,12]),r(a,[2,13]),r(a,[2,14]),r(a,[2,15]),{20:[1,38]},{22:[1,39]},r(a,[2,18]),r(a,[2,19]),r(a,[2,20]),{27:40,33:P,46:E},r(a,[2,117],{41:43,32:[1,46],33:[1,48],35:[1,44],38:[1,45],42:[1,47]}),{27:49,33:P,46:E},{32:[1,50],35:[1,51]},{27:52,33:P,46:E},{1:[2,4]},r(y,[2,11]),r(a,[2,16]),r(a,[2,17]),r(a,[2,21]),r(d,[2,122]),r(d,[2,123]),r(a,[2,52]),{33:[1,53]},{39:54,43:f,44:k,45:p},{33:[1,58]},{33:[1,59]},r(a,[2,118]),r(a,[2,36],{32:[1,60],35:[1,62],38:[1,61]}),{33:[1,63]},{33:[1,64],36:[1,65]},r(a,[2,22],{29:[1,66]}),r(a,[2,53],{32:[1,68],38:[1,67],42:[1,69]}),r(a,[2,54],{32:[1,71],35:[1,70],42:[1,72]}),r(T,[2,119]),r(T,[2,120]),r(T,[2,121]),r(a,[2,57],{35:[1,73],38:[1,74],42:[1,75]}),r(a,[2,68],{32:[1,78],35:[1,76],38:[1,77]}),{33:[1,79]},{39:80,43:f,44:k,45:p},{33:[1,81]},r(a,[2,24],{34:[1,82],35:[1,83]}),{32:[1,84]},{32:[1,85]},{30:[1,86]},{39:87,43:f,44:k,45:p},{33:[1,88]},{33:[1,89]},{33:[1,90]},{33:[1,91]},{33:[1,92]},{33:[1,93]},{39:94,43:f,44:k,45:p},{33:[1,95]},{33:[1,96]},{39:97,43:f,44:k,45:p},{33:[1,98]},r(a,[2,37],{35:[1,100],38:[1,99]}),r(a,[2,38],{32:[1,102],35:[1,101]}),r(a,[2,39],{32:[1,103],38:[1,104]}),{33:[1,105]},{33:[1,106],36:[1,107]},{33:[1,108]},{33:[1,109]},r(a,[2,23]),r(a,[2,55],{32:[1,110],42:[1,111]}),r(a,[2,59],{38:[1,112],42:[1,113]}),r(a,[2,69],{32:[1,115],38:[1,114]}),r(a,[2,56],{32:[1,116],42:[1,117]}),r(a,[2,61],{35:[1,118],42:[1,119]}),r(a,[2,72],{32:[1,121],35:[1,120]}),r(a,[2,58],{38:[1,122],42:[1,123]}),r(a,[2,60],{35:[1,124],42:[1,125]}),r(a,[2,73],{35:[1,127],38:[1,126]}),r(a,[2,70],{32:[1,129],38:[1,128]}),r(a,[2,71],{32:[1,131],35:[1,130]}),r(a,[2,74],{35:[1,133],38:[1,132]}),{39:134,43:f,44:k,45:p},{33:[1,135]},{33:[1,136]},{33:[1,137]},{33:[1,138]},{39:139,43:f,44:k,45:p},r(a,[2,25],{35:[1,140]}),r(a,[2,26],{34:[1,141]}),r(a,[2,31],{34:[1,142]}),r(a,[2,29],{34:[1,143]}),r(a,[2,30],{34:[1,144]}),{33:[1,145]},{33:[1,146]},{39:147,43:f,44:k,45:p},{33:[1,148]},{39:149,43:f,44:k,45:p},{33:[1,150]},{33:[1,151]},{33:[1,152]},{33:[1,153]},{33:[1,154]},{33:[1,155]},{33:[1,156]},{39:157,43:f,44:k,45:p},{33:[1,158]},{33:[1,159]},{33:[1,160]},{39:161,43:f,44:k,45:p},{33:[1,162]},{39:163,43:f,44:k,45:p},{33:[1,164]},{33:[1,165]},{33:[1,166]},{39:167,43:f,44:k,45:p},{33:[1,168]},r(a,[2,43],{35:[1,169]}),r(a,[2,44],{38:[1,170]}),r(a,[2,42],{32:[1,171]}),r(a,[2,45],{35:[1,172]}),r(a,[2,40],{38:[1,173]}),r(a,[2,41],{32:[1,174]}),{33:[1,175],36:[1,176]},{33:[1,177]},{33:[1,178]},{33:[1,179]},{33:[1,180]},r(a,[2,66],{42:[1,181]}),r(a,[2,79],{32:[1,182]}),r(a,[2,67],{42:[1,183]}),r(a,[2,90],{38:[1,184]}),r(a,[2,80],{32:[1,185]}),r(a,[2,89],{38:[1,186]}),r(a,[2,65],{42:[1,187]}),r(a,[2,78],{32:[1,188]}),r(a,[2,64],{42:[1,189]}),r(a,[2,84],{35:[1,190]}),r(a,[2,77],{32:[1,191]}),r(a,[2,83],{35:[1,192]}),r(a,[2,63],{42:[1,193]}),r(a,[2,91],{38:[1,194]}),r(a,[2,62],{42:[1,195]}),r(a,[2,85],{35:[1,196]}),r(a,[2,86],{35:[1,197]}),r(a,[2,92],{38:[1,198]}),r(a,[2,76],{32:[1,199]}),r(a,[2,87],{38:[1,200]}),r(a,[2,75],{32:[1,201]}),r(a,[2,81],{35:[1,202]}),r(a,[2,82],{35:[1,203]}),r(a,[2,88],{38:[1,204]}),{33:[1,205]},{39:206,43:f,44:k,45:p},{33:[1,207]},{33:[1,208]},{39:209,43:f,44:k,45:p},{33:[1,210]},r(a,[2,27]),r(a,[2,32]),r(a,[2,28]),r(a,[2,33]),r(a,[2,34]),r(a,[2,35]),{33:[1,211]},{33:[1,212]},{33:[1,213]},{39:214,43:f,44:k,45:p},{33:[1,215]},{39:216,43:f,44:k,45:p},{33:[1,217]},{33:[1,218]},{33:[1,219]},{33:[1,220]},{33:[1,221]},{33:[1,222]},{33:[1,223]},{39:224,43:f,44:k,45:p},{33:[1,225]},{33:[1,226]},{33:[1,227]},{39:228,43:f,44:k,45:p},{33:[1,229]},{39:230,43:f,44:k,45:p},{33:[1,231]},{33:[1,232]},{33:[1,233]},{39:234,43:f,44:k,45:p},r(a,[2,46]),r(a,[2,48]),r(a,[2,47]),r(a,[2,49]),r(a,[2,51]),r(a,[2,50]),r(a,[2,107]),r(a,[2,108]),r(a,[2,105]),r(a,[2,106]),r(a,[2,110]),r(a,[2,109]),r(a,[2,114]),r(a,[2,113]),r(a,[2,112]),r(a,[2,111]),r(a,[2,116]),r(a,[2,115]),r(a,[2,104]),r(a,[2,103]),r(a,[2,102]),r(a,[2,101]),r(a,[2,99]),r(a,[2,100]),r(a,[2,98]),r(a,[2,97]),r(a,[2,96]),r(a,[2,95]),r(a,[2,93]),r(a,[2,94])],defaultActions:{7:[2,1],13:[2,2],18:[2,3],36:[2,4]},parseError:function(o,u){if(u.recoverable)this.trace(o);else{var x=new Error(o);throw x.hash=u,x}},parse:function(o){var u=this,x=[0],s=[],w=[null],e=[],re=this.table,t="",ae=0,Ee=0,rt=2,Te=1,it=e.slice.call(arguments,1),A=Object.create(this.lexer),W={yy:{}};for(var he in this.yy)Object.prototype.hasOwnProperty.call(this.yy,he)&&(W.yy[he]=this.yy[he]);A.setInput(o,W.yy),W.yy.lexer=A,W.yy.parser=this,typeof A.yylloc=="undefined"&&(A.yylloc={});var me=A.yylloc;e.push(me);var st=A.options&&A.options.ranges;typeof W.yy.parseError=="function"?this.parseError=W.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;function at(){var F;return F=s.pop()||A.lex()||Te,typeof F!="number"&&(F instanceof Array&&(s=F,F=s.pop()),F=u.symbols_[F]||F),F}for(var D,Q,V,ue,X={},ne,K,we,ce;;){if(Q=x[x.length-1],this.defaultActions[Q]?V=this.defaultActions[Q]:((D===null||typeof D=="undefined")&&(D=at()),V=re[Q]&&re[Q][D]),typeof V=="undefined"||!V.length||!V[0]){var fe="";ce=[];for(ne in re[Q])this.terminals_[ne]&&ne>rt&&ce.push("'"+this.terminals_[ne]+"'");A.showPosition?fe="Parse error on line "+(ae+1)+`:
`+A.showPosition()+`
Expecting `+ce.join(", ")+", got '"+(this.terminals_[D]||D)+"'":fe="Parse error on line "+(ae+1)+": Unexpected "+(D==Te?"end of input":"'"+(this.terminals_[D]||D)+"'"),this.parseError(fe,{text:A.match,token:this.terminals_[D]||D,line:A.yylineno,loc:me,expected:ce})}if(V[0]instanceof Array&&V.length>1)throw new Error("Parse Error: multiple actions possible at state: "+Q+", token: "+D);switch(V[0]){case 1:x.push(D),w.push(A.yytext),e.push(A.yylloc),x.push(V[1]),D=null,Ee=A.yyleng,t=A.yytext,ae=A.yylineno,me=A.yylloc;break;case 2:if(K=this.productions_[V[1]][1],X.$=w[w.length-K],X._$={first_line:e[e.length-(K||1)].first_line,last_line:e[e.length-1].last_line,first_column:e[e.length-(K||1)].first_column,last_column:e[e.length-1].last_column},st&&(X._$.range=[e[e.length-(K||1)].range[0],e[e.length-1].range[1]]),ue=this.performAction.apply(X,[t,Ee,ae,W.yy,V[1],w,e].concat(it)),typeof ue!="undefined")return ue;K&&(x=x.slice(0,-1*K*2),w=w.slice(0,-1*K),e=e.slice(0,-1*K)),x.push(this.productions_[V[1]][0]),w.push(X.$),e.push(X._$),we=re[x[x.length-2]][x[x.length-1]],x.push(we);break;case 3:return!0}}return!0}},v=function(){var S={EOF:1,parseError:function(u,x){if(this.yy.parser)this.yy.parser.parseError(u,x);else throw new Error(u)},setInput:function(o,u){return this.yy=u||this.yy||{},this._input=o,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var o=this._input[0];this.yytext+=o,this.yyleng++,this.offset++,this.match+=o,this.matched+=o;var u=o.match(/(?:\r\n?|\n).*/g);return u?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),o},unput:function(o){var u=o.length,x=o.split(/(?:\r\n?|\n)/g);this._input=o+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-u),this.offset-=u;var s=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),x.length-1&&(this.yylineno-=x.length-1);var w=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:x?(x.length===s.length?this.yylloc.first_column:0)+s[s.length-x.length].length-x[0].length:this.yylloc.first_column-u},this.options.ranges&&(this.yylloc.range=[w[0],w[0]+this.yyleng-u]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){if(this.options.backtrack_lexer)this._backtrack=!0;else return this.parseError("Lexical error on line "+(this.yylineno+1)+`. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).
`+this.showPosition(),{text:"",token:null,line:this.yylineno});return this},less:function(o){this.unput(this.match.slice(o))},pastInput:function(){var o=this.matched.substr(0,this.matched.length-this.match.length);return(o.length>20?"...":"")+o.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var o=this.match;return o.length<20&&(o+=this._input.substr(0,20-o.length)),(o.substr(0,20)+(o.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var o=this.pastInput(),u=new Array(o.length+1).join("-");return o+this.upcomingInput()+`
`+u+"^"},test_match:function(o,u){var x,s,w;if(this.options.backtrack_lexer&&(w={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(w.yylloc.range=this.yylloc.range.slice(0))),s=o[0].match(/(?:\r\n?|\n).*/g),s&&(this.yylineno+=s.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:s?s[s.length-1].length-s[s.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+o[0].length},this.yytext+=o[0],this.match+=o[0],this.matches=o,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(o[0].length),this.matched+=o[0],x=this.performAction.call(this,this.yy,this,u,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),x)return x;if(this._backtrack){for(var e in w)this[e]=w[e];return!1}return!1},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var o,u,x,s;this._more||(this.yytext="",this.match="");for(var w=this._currentRules(),e=0;e<w.length;e++)if(x=this._input.match(this.rules[w[e]]),x&&(!u||x[0].length>u[0].length)){if(u=x,s=e,this.options.backtrack_lexer){if(o=this.test_match(x,w[e]),o!==!1)return o;if(this._backtrack){u=!1;continue}else return!1}else if(!this.options.flex)break}return u?(o=this.test_match(u,w[s]),o!==!1?o:!1):this._input===""?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+`. Unrecognized text.
`+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var u=this.next();return u||this.lex()},begin:function(u){this.conditionStack.push(u)},popState:function(){var u=this.conditionStack.length-1;return u>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(u){return u=this.conditionStack.length-1-Math.abs(u||0),u>=0?this.conditionStack[u]:"INITIAL"},pushState:function(u){this.begin(u)},stateStackSize:function(){return this.conditionStack.length},options:{"case-insensitive":!0},performAction:function(u,x,s,w){switch(s){case 0:return this.begin("acc_title"),19;case 1:return this.popState(),"acc_title_value";case 2:return this.begin("acc_descr"),21;case 3:return this.popState(),"acc_descr_value";case 4:this.begin("acc_descr_multiline");break;case 5:this.popState();break;case 6:return"acc_descr_multiline_value";case 7:return 13;case 8:break;case 9:break;case 10:return 5;case 11:return 40;case 12:return 32;case 13:return 38;case 14:return 42;case 15:return 43;case 16:return 44;case 17:return 45;case 18:return 35;case 19:return 28;case 20:return 29;case 21:return 37;case 22:return 31;case 23:return 34;case 24:return 26;case 25:return 9;case 26:return 9;case 27:return 8;case 28:return"CARET";case 29:this.begin("options");break;case 30:this.popState();break;case 31:return 12;case 32:return 36;case 33:this.begin("string");break;case 34:this.popState();break;case 35:return 33;case 36:return 30;case 37:return 46;case 38:return 7}},rules:[/^(?:accTitle\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*\{\s*)/i,/^(?:[\}])/i,/^(?:[^\}]*)/i,/^(?:(\r?\n)+)/i,/^(?:#[^\n]*)/i,/^(?:%[^\n]*)/i,/^(?:gitGraph\b)/i,/^(?:commit(?=\s|$))/i,/^(?:id:)/i,/^(?:type:)/i,/^(?:msg:)/i,/^(?:NORMAL\b)/i,/^(?:REVERSE\b)/i,/^(?:HIGHLIGHT\b)/i,/^(?:tag:)/i,/^(?:branch(?=\s|$))/i,/^(?:order:)/i,/^(?:merge(?=\s|$))/i,/^(?:cherry-pick(?=\s|$))/i,/^(?:parent:)/i,/^(?:checkout(?=\s|$))/i,/^(?:LR\b)/i,/^(?:TB\b)/i,/^(?::)/i,/^(?:\^)/i,/^(?:options\r?\n)/i,/^(?:[ \r\n\t]+end\b)/i,/^(?:[\s\S]+(?=[ \r\n\t]+end))/i,/^(?:["]["])/i,/^(?:["])/i,/^(?:["])/i,/^(?:[^"]*)/i,/^(?:[0-9]+(?=\s|$))/i,/^(?:\w([-\./\w]*[-\w])?)/i,/^(?:$)/i,/^(?:\s+)/i],conditions:{acc_descr_multiline:{rules:[5,6],inclusive:!1},acc_descr:{rules:[3],inclusive:!1},acc_title:{rules:[1],inclusive:!1},options:{rules:[30,31],inclusive:!1},string:{rules:[34,35],inclusive:!1},INITIAL:{rules:[0,2,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,32,33,36,37,38,39],inclusive:!0}}};return S}();j.lexer=v;function G(){this.yy={}}return G.prototype=j,j.Parser=G,new G}();oe.parser=oe;const Oe=oe;let ie=(0,b.c)().gitGraph.mainBranchName,Pe=(0,b.c)().gitGraph.mainBranchOrder,L={},N=null,Z={};Z[ie]={name:ie,order:Pe};let M={};M[ie]=N;let C=ie,pe="LR",U=0;function le(){return(0,b.y)({length:7})}function Ae(r,n){const l=Object.create(null);return r.reduce((h,i)=>{const c=n(i);return l[c]||(l[c]=!0,h.push(i)),h},[])}const Ie=function(r){pe=r};let be={};const Se=function(r){b.l.debug("options str",r),r=r&&r.trim(),r=r||"{}";try{be=JSON.parse(r)}catch(n){b.l.error("error while parsing gitGraph options",n.message)}},Ge=function(){return be},Ne=function(r,n,l,h){b.l.debug("Entering commit:",r,n,l,h),n=b.e.sanitizeText(n,(0,b.c)()),r=b.e.sanitizeText(r,(0,b.c)()),h=b.e.sanitizeText(h,(0,b.c)());const i={id:n||U+"-"+le(),message:r,seq:U++,type:l||J.NORMAL,tag:h||"",parents:N==null?[]:[N.id],branch:C};N=i,L[i.id]=i,M[C]=i.id,b.l.debug("in pushCommit "+i.id)},He=function(r,n){if(r=b.e.sanitizeText(r,(0,b.c)()),M[r]===void 0)M[r]=N!=null?N.id:null,Z[r]={name:r,order:n?parseInt(n,10):null},ge(r),b.l.debug("in createBranch");else{let l=new Error('Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using "checkout '+r+'")');throw l.hash={text:"branch "+r,token:"branch "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"checkout '+r+'"']},l}},Be=function(r,n,l,h){r=b.e.sanitizeText(r,(0,b.c)()),n=b.e.sanitizeText(n,(0,b.c)());const i=L[M[C]],c=L[M[r]];if(C===r){let m=new Error('Incorrect usage of "merge". Cannot merge a branch to itself');throw m.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},m}else if(i===void 0||!i){let m=new Error('Incorrect usage of "merge". Current branch ('+C+")has no commits");throw m.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["commit"]},m}else if(M[r]===void 0){let m=new Error('Incorrect usage of "merge". Branch to be merged ('+r+") does not exist");throw m.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch "+r]},m}else if(c===void 0||!c){let m=new Error('Incorrect usage of "merge". Branch to be merged ('+r+") has no commits");throw m.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"commit"']},m}else if(i===c){let m=new Error('Incorrect usage of "merge". Both branches have same head');throw m.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},m}else if(n&&L[n]!==void 0){let m=new Error('Incorrect usage of "merge". Commit with id:'+n+" already exists, use different custom Id");throw m.hash={text:"merge "+r+n+l+h,token:"merge "+r+n+l+h,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["merge "+r+" "+n+"_UNIQUE "+l+" "+h]},m}const g={id:n||U+"-"+le(),message:"merged branch "+r+" into "+C,seq:U++,parents:[N==null?null:N.id,M[r]],branch:C,type:J.MERGE,customType:l,customId:!!n,tag:h||""};N=g,L[g.id]=g,M[C]=g.id,b.l.debug(M),b.l.debug("in mergeBranch")},De=function(r,n,l,h){if(b.l.debug("Entering cherryPick:",r,n,l),r=b.e.sanitizeText(r,(0,b.c)()),n=b.e.sanitizeText(n,(0,b.c)()),l=b.e.sanitizeText(l,(0,b.c)()),h=b.e.sanitizeText(h,(0,b.c)()),!r||L[r]===void 0){let g=new Error('Incorrect usage of "cherryPick". Source commit id should exist and provided');throw g.hash={text:"cherryPick "+r+" "+n,token:"cherryPick "+r+" "+n,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},g}let i=L[r],c=i.branch;if(h&&!(Array.isArray(i.parents)&&i.parents.includes(h)))throw new Error("Invalid operation: The specified parent commit is not an immediate parent of the cherry-picked commit.");if(i.type===J.MERGE&&!h)throw new Error("Incorrect usage of cherry-pick: If the source commit is a merge commit, an immediate parent commit must be specified.");if(!n||L[n]===void 0){if(c===C){let y=new Error('Incorrect usage of "cherryPick". Source commit is already on current branch');throw y.hash={text:"cherryPick "+r+" "+n,token:"cherryPick "+r+" "+n,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},y}const g=L[M[C]];if(g===void 0||!g){let y=new Error('Incorrect usage of "cherry-pick". Current branch ('+C+")has no commits");throw y.hash={text:"cherryPick "+r+" "+n,token:"cherryPick "+r+" "+n,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},y}const m={id:U+"-"+le(),message:"cherry-picked "+i+" into "+C,seq:U++,parents:[N==null?null:N.id,i.id],branch:C,type:J.CHERRY_PICK,tag:l!=null?l:`cherry-pick:${i.id}${i.type===J.MERGE?`|parent:${h}`:""}`};N=m,L[m.id]=m,M[C]=m.id,b.l.debug(M),b.l.debug("in cherryPick")}},ge=function(r){if(r=b.e.sanitizeText(r,(0,b.c)()),M[r]===void 0){let n=new Error('Trying to checkout branch which is not yet created. (Help try using "branch '+r+'")');throw n.hash={text:"checkout "+r,token:"checkout "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"branch '+r+'"']},n}else{C=r;const n=M[C];N=L[n]}};function de(r,n,l){const h=r.indexOf(n);h===-1?r.push(l):r.splice(h,1,l)}function ke(r){const n=r.reduce((i,c)=>i.seq>c.seq?i:c,r[0]);let l="";r.forEach(function(i){i===n?l+="	*":l+="	|"});const h=[l,n.id,n.seq];for(let i in M)M[i]===n.id&&h.push(i);if(b.l.debug(h.join(" ")),n.parents&&n.parents.length==2){const i=L[n.parents[0]];de(r,n,i),r.push(L[n.parents[1]])}else{if(n.parents.length==0)return;{const i=L[n.parents];de(r,n,i)}}r=Ae(r,i=>i.id),ke(r)}const Ve=function(){b.l.debug(L);const r=xe()[0];ke([r])},ze=function(){L={},N=null;let r=(0,b.c)().gitGraph.mainBranchName,n=(0,b.c)().gitGraph.mainBranchOrder;M={},M[r]=null,Z={},Z[r]={name:r,order:n},C=r,U=0,(0,b.v)()},je=function(){return Object.values(Z).map((n,l)=>n.order!==null?n:ve(Le({},n),{order:parseFloat(`0.${l}`,10)})).sort((n,l)=>n.order-l.order).map(({name:n})=>({name:n}))},Ye=function(){return M},Ke=function(){return L},xe=function(){const r=Object.keys(L).map(function(n){return L[n]});return r.forEach(function(n){b.l.debug(n.id)}),r.sort((n,l)=>n.seq-l.seq),r},Fe=function(){return C},Ue=function(){return pe},qe=function(){return N},J={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},We={getConfig:()=>(0,b.c)().gitGraph,setDirection:Ie,setOptions:Se,getOptions:Ge,commit:Ne,branch:He,merge:Be,cherryPick:De,checkout:ge,prettyPrint:Ve,clear:ze,getBranchesAsObjArray:je,getBranches:Ye,getCommits:Ke,getCommitsArray:xe,getCurrentBranch:Fe,getDirection:Ue,getHead:qe,setAccTitle:b.s,getAccTitle:b.g,getAccDescription:b.a,setAccDescription:b.b,setDiagramTitle:b.q,getDiagramTitle:b.t,commitType:J};let $={};const O={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},q=8;let B={},Y={},se=[],ee=0,R="LR";const Qe=()=>{B={},Y={},$={},ee=0,se=[],R="LR"},ye=r=>{const n=document.createElementNS("http://www.w3.org/2000/svg","text");let l=[];typeof r=="string"?l=r.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(r)?l=r:l=[];for(const h of l){const i=document.createElementNS("http://www.w3.org/2000/svg","tspan");i.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),i.setAttribute("dy","1em"),i.setAttribute("x","0"),i.setAttribute("class","row"),i.textContent=h.trim(),n.appendChild(i)}return n},Je=r=>{let n="",l=0;return r.forEach(h=>{const i=R==="TB"?Y[h].y:Y[h].x;i>=l&&(n=h,l=i)}),n||void 0},_e=(r,n,l)=>{const h=(0,b.c)().gitGraph,i=r.append("g").attr("class","commit-bullets"),c=r.append("g").attr("class","commit-labels");let g=0;R==="TB"&&(g=30);const y=Object.keys(n).sort((E,d)=>n[E].seq-n[d].seq),_=h.parallelCommits,a=10,P=40;y.forEach(E=>{const d=n[E];if(_)if(d.parents.length){const T=Je(d.parents);g=R==="TB"?Y[T].y+P:Y[T].x+P}else g=0,R==="TB"&&(g=30);const f=g+a,k=R==="TB"?f:B[d.branch].pos,p=R==="TB"?B[d.branch].pos:f;if(l){let T,j=d.customType!==void 0&&d.customType!==""?d.customType:d.type;switch(j){case O.NORMAL:T="commit-normal";break;case O.REVERSE:T="commit-reverse";break;case O.HIGHLIGHT:T="commit-highlight";break;case O.MERGE:T="commit-merge";break;case O.CHERRY_PICK:T="commit-cherry-pick";break;default:T="commit-normal"}if(j===O.HIGHLIGHT){const v=i.append("rect");v.attr("x",p-10),v.attr("y",k-10),v.attr("height",20),v.attr("width",20),v.attr("class",`commit ${d.id} commit-highlight${B[d.branch].index%q} ${T}-outer`),i.append("rect").attr("x",p-6).attr("y",k-6).attr("height",12).attr("width",12).attr("class",`commit ${d.id} commit${B[d.branch].index%q} ${T}-inner`)}else if(j===O.CHERRY_PICK)i.append("circle").attr("cx",p).attr("cy",k).attr("r",10).attr("class",`commit ${d.id} ${T}`),i.append("circle").attr("cx",p-3).attr("cy",k+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${d.id} ${T}`),i.append("circle").attr("cx",p+3).attr("cy",k+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${d.id} ${T}`),i.append("line").attr("x1",p+3).attr("y1",k+1).attr("x2",p).attr("y2",k-5).attr("stroke","#fff").attr("class",`commit ${d.id} ${T}`),i.append("line").attr("x1",p-3).attr("y1",k+1).attr("x2",p).attr("y2",k-5).attr("stroke","#fff").attr("class",`commit ${d.id} ${T}`);else{const v=i.append("circle");if(v.attr("cx",p),v.attr("cy",k),v.attr("r",d.type===O.MERGE?9:10),v.attr("class",`commit ${d.id} commit${B[d.branch].index%q}`),j===O.MERGE){const G=i.append("circle");G.attr("cx",p),G.attr("cy",k),G.attr("r",6),G.attr("class",`commit ${T} ${d.id} commit${B[d.branch].index%q}`)}j===O.REVERSE&&i.append("path").attr("d",`M ${p-5},${k-5}L${p+5},${k+5}M${p-5},${k+5}L${p+5},${k-5}`).attr("class",`commit ${T} ${d.id} commit${B[d.branch].index%q}`)}}if(R==="TB"?Y[d.id]={x:p,y:f}:Y[d.id]={x:f,y:k},l){if(d.type!==O.CHERRY_PICK&&(d.customId&&d.type===O.MERGE||d.type!==O.MERGE)&&h.showCommitLabel){const v=c.append("g"),G=v.insert("rect").attr("class","commit-label-bkg"),S=v.append("text").attr("x",g).attr("y",k+25).attr("class","commit-label").text(d.id);let o=S.node().getBBox();if(G.attr("x",f-o.width/2-2).attr("y",k+13.5).attr("width",o.width+2*2).attr("height",o.height+2*2),R==="TB"&&(G.attr("x",p-(o.width+4*4+5)).attr("y",k-12),S.attr("x",p-(o.width+4*4)).attr("y",k+o.height-12)),R!=="TB"&&S.attr("x",f-o.width/2),h.rotateCommitLabel)if(R==="TB")S.attr("transform","rotate(-45, "+p+", "+k+")"),G.attr("transform","rotate(-45, "+p+", "+k+")");else{let u=-7.5-(o.width+10)/25*9.5,x=10+o.width/25*8.5;v.attr("transform","translate("+u+", "+x+") rotate(-45, "+g+", "+k+")")}}if(d.tag){const v=c.insert("polygon"),G=c.append("circle"),S=c.append("text").attr("y",k-16).attr("class","tag-label").text(d.tag);let o=S.node().getBBox();S.attr("x",f-o.width/2);const u=o.height/2,x=k-19.2;v.attr("class","tag-label-bkg").attr("points",`
          ${g-o.width/2-4/2},${x+2}
          ${g-o.width/2-4/2},${x-2}
          ${f-o.width/2-4},${x-u-2}
          ${f+o.width/2+4},${x-u-2}
          ${f+o.width/2+4},${x+u+2}
          ${f-o.width/2-4},${x+u+2}`),G.attr("cx",g-o.width/2+4/2).attr("cy",x).attr("r",1.5).attr("class","tag-hole"),R==="TB"&&(v.attr("class","tag-label-bkg").attr("points",`
            ${p},${g+2}
            ${p},${g-2}
            ${p+a},${g-u-2}
            ${p+a+o.width+4},${g-u-2}
            ${p+a+o.width+4},${g+u+2}
            ${p+a},${g+u+2}`).attr("transform","translate(12,12) rotate(45, "+p+","+g+")"),G.attr("cx",p+4/2).attr("cy",g).attr("transform","translate(12,12) rotate(45, "+p+","+g+")"),S.attr("x",p+5).attr("y",g+3).attr("transform","translate(14,14) rotate(45, "+p+","+g+")"))}}g+=P+a,g>ee&&(ee=g)})},Xe=(r,n,l,h,i)=>{const g=(R==="TB"?l.x<h.x:l.y<h.y)?n.branch:r.branch,m=_=>_.branch===g,y=_=>_.seq>r.seq&&_.seq<n.seq;return Object.values(i).some(_=>y(_)&&m(_))},te=(r,n,l=0)=>{const h=r+Math.abs(r-n)/2;if(l>5)return h;if(se.every(g=>Math.abs(g-h)>=10))return se.push(h),h;const c=Math.abs(r-n);return te(r,n-c/5,l+1)},Ze=(r,n,l,h)=>{const i=Y[n.id],c=Y[l.id],g=Xe(n,l,i,c,h);let m="",y="",_=0,a=0,P=B[l.branch].index;l.type===O.MERGE&&n.id!==l.parents[0]&&(P=B[n.branch].index);let E;if(g){m="A 10 10, 0, 0, 0,",y="A 10 10, 0, 0, 1,",_=10,a=10;const d=i.y<c.y?te(i.y,c.y):te(c.y,i.y),f=i.x<c.x?te(i.x,c.x):te(c.x,i.x);R==="TB"?i.x<c.x?E=`M ${i.x} ${i.y} L ${f-_} ${i.y} ${y} ${f} ${i.y+a} L ${f} ${c.y-_} ${m} ${f+a} ${c.y} L ${c.x} ${c.y}`:(P=B[n.branch].index,E=`M ${i.x} ${i.y} L ${f+_} ${i.y} ${m} ${f} ${i.y+a} L ${f} ${c.y-_} ${y} ${f-a} ${c.y} L ${c.x} ${c.y}`):i.y<c.y?E=`M ${i.x} ${i.y} L ${i.x} ${d-_} ${m} ${i.x+a} ${d} L ${c.x-_} ${d} ${y} ${c.x} ${d+a} L ${c.x} ${c.y}`:(P=B[n.branch].index,E=`M ${i.x} ${i.y} L ${i.x} ${d+_} ${y} ${i.x+a} ${d} L ${c.x-_} ${d} ${m} ${c.x} ${d-a} L ${c.x} ${c.y}`)}else m="A 20 20, 0, 0, 0,",y="A 20 20, 0, 0, 1,",_=20,a=20,R==="TB"?(i.x<c.x&&(l.type===O.MERGE&&n.id!==l.parents[0]?E=`M ${i.x} ${i.y} L ${i.x} ${c.y-_} ${m} ${i.x+a} ${c.y} L ${c.x} ${c.y}`:E=`M ${i.x} ${i.y} L ${c.x-_} ${i.y} ${y} ${c.x} ${i.y+a} L ${c.x} ${c.y}`),i.x>c.x&&(m="A 20 20, 0, 0, 0,",y="A 20 20, 0, 0, 1,",_=20,a=20,l.type===O.MERGE&&n.id!==l.parents[0]?E=`M ${i.x} ${i.y} L ${i.x} ${c.y-_} ${y} ${i.x-a} ${c.y} L ${c.x} ${c.y}`:E=`M ${i.x} ${i.y} L ${c.x+_} ${i.y} ${m} ${c.x} ${i.y+a} L ${c.x} ${c.y}`),i.x===c.x&&(E=`M ${i.x} ${i.y} L ${c.x} ${c.y}`)):(i.y<c.y&&(l.type===O.MERGE&&n.id!==l.parents[0]?E=`M ${i.x} ${i.y} L ${c.x-_} ${i.y} ${y} ${c.x} ${i.y+a} L ${c.x} ${c.y}`:E=`M ${i.x} ${i.y} L ${i.x} ${c.y-_} ${m} ${i.x+a} ${c.y} L ${c.x} ${c.y}`),i.y>c.y&&(l.type===O.MERGE&&n.id!==l.parents[0]?E=`M ${i.x} ${i.y} L ${c.x-_} ${i.y} ${m} ${c.x} ${i.y-a} L ${c.x} ${c.y}`:E=`M ${i.x} ${i.y} L ${i.x} ${c.y+_} ${y} ${i.x+a} ${c.y} L ${c.x} ${c.y}`),i.y===c.y&&(E=`M ${i.x} ${i.y} L ${c.x} ${c.y}`));r.append("path").attr("d",E).attr("class","arrow arrow"+P%q)},$e=(r,n)=>{const l=r.append("g").attr("class","commit-arrows");Object.keys(n).forEach(h=>{const i=n[h];i.parents&&i.parents.length>0&&i.parents.forEach(c=>{Ze(l,n[c],i,n)})})},et=(r,n)=>{const l=(0,b.c)().gitGraph,h=r.append("g");n.forEach((i,c)=>{const g=c%q,m=B[i.name].pos,y=h.append("line");y.attr("x1",0),y.attr("y1",m),y.attr("x2",ee),y.attr("y2",m),y.attr("class","branch branch"+g),R==="TB"&&(y.attr("y1",30),y.attr("x1",m),y.attr("y2",ee),y.attr("x2",m)),se.push(m);let _=i.name;const a=ye(_),P=h.insert("rect"),d=h.insert("g").attr("class","branchLabel").insert("g").attr("class","label branch-label"+g);d.node().appendChild(a);let f=a.getBBox();P.attr("class","branchLabelBkg label"+g).attr("rx",4).attr("ry",4).attr("x",-f.width-4-(l.rotateCommitLabel===!0?30:0)).attr("y",-f.height/2+8).attr("width",f.width+18).attr("height",f.height+4),d.attr("transform","translate("+(-f.width-14-(l.rotateCommitLabel===!0?30:0))+", "+(m-f.height/2-1)+")"),R==="TB"&&(P.attr("x",m-f.width/2-10).attr("y",0),d.attr("transform","translate("+(m-f.width/2-5)+", 0)")),R!=="TB"&&P.attr("transform","translate(-19, "+(m-f.height/2)+")")})},tt={parser:Oe,db:We,renderer:{draw:function(r,n,l,h){var _;Qe();const i=(0,b.c)(),c=i.gitGraph;b.l.debug("in gitgraph renderer",r+`
`,"id:",n,l),$=h.db.getCommits();const g=h.db.getBranchesAsObjArray();R=h.db.getDirection();const m=(0,Ce.Ys)(`[id="${n}"]`);let y=0;g.forEach((a,P)=>{const E=ye(a.name),d=m.append("g"),f=d.insert("g").attr("class","branchLabel"),k=f.insert("g").attr("class","label branch-label");k.node().appendChild(E);let p=E.getBBox();B[a.name]={pos:y,index:P},y+=50+(c.rotateCommitLabel?40:0)+(R==="TB"?p.width/2:0),k.remove(),f.remove(),d.remove()}),_e(m,$,!1),c.showBranches&&et(m,g),$e(m,$),_e(m,$,!0),b.u.insertTitle(m,"gitTitleText",c.titleTopMargin,h.db.getDiagramTitle()),(0,b.z)(void 0,m,c.diagramPadding,(_=c.useMaxWidth)!=null?_:i.useMaxWidth)}},styles:r=>`
  .commit-id,
  .commit-msg,
  .branch-label {
    fill: lightgrey;
    color: lightgrey;
    font-family: 'trebuchet ms', verdana, arial, sans-serif;
    font-family: var(--mermaid-font-family);
  }
  ${[0,1,2,3,4,5,6,7].map(n=>`
        .branch-label${n} { fill: ${r["gitBranchLabel"+n]}; }
        .commit${n} { stroke: ${r["git"+n]}; fill: ${r["git"+n]}; }
        .commit-highlight${n} { stroke: ${r["gitInv"+n]}; fill: ${r["gitInv"+n]}; }
        .label${n}  { fill: ${r["git"+n]}; }
        .arrow${n} { stroke: ${r["git"+n]}; }
        `).join(`
`)}

  .branch {
    stroke-width: 1;
    stroke: ${r.lineColor};
    stroke-dasharray: 2;
  }
  .commit-label { font-size: ${r.commitLabelFontSize}; fill: ${r.commitLabelColor};}
  .commit-label-bkg { font-size: ${r.commitLabelFontSize}; fill: ${r.commitLabelBackground}; opacity: 0.5; }
  .tag-label { font-size: ${r.tagLabelFontSize}; fill: ${r.tagLabelColor};}
  .tag-label-bkg { fill: ${r.tagLabelBackground}; stroke: ${r.tagLabelBorder}; }
  .tag-hole { fill: ${r.textColor}; }

  .commit-merge {
    stroke: ${r.primaryColor};
    fill: ${r.primaryColor};
  }
  .commit-reverse {
    stroke: ${r.primaryColor};
    fill: ${r.primaryColor};
    stroke-width: 3;
  }
  .commit-highlight-outer {
  }
  .commit-highlight-inner {
    stroke: ${r.primaryColor};
    fill: ${r.primaryColor};
  }

  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}
  .gitTitleText {
    text-anchor: middle;
    font-size: 18px;
    fill: ${r.textColor};
  }
`}}}]);
}());